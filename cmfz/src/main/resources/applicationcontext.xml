<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">
    <!--加载小配置文件 -->
    <context:property-placeholder location="classpath:/conf/db.properties"/>
    <!--开启注解 -->
    <context:component-scan base-package="com.baizhi.bpf.cmfz."></context:component-scan>
    <!--整合mybatis 3步 -->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
        <property name="driverClassName" value="${driver}"/>
        <property name="url" value="${url}"/>
        <property name="username" value="${dbuname}"/>
        <property name="password" value="${dbupass}"/>
    </bean>

    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="typeAliasesPackage" value="com.baizhi.bpf.cmfz.entity"/>
        <property name="mapperLocations" >
            <list>
                <value>classpath:mapper/*DAOMapper.xml</value>
            </list>
        </property>
    </bean>

    <bean  id="mapperScannerConfigurer" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
        <property name="basePackage" value="com.baizhi.bpf.cmfz.dao"/>
    </bean>
    <!-- 注解式事务生效 -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <tx:annotation-driven transaction-manager="transactionManager"/>

    <!--aop编程-->
    <bean id="logAdvice" class="com.baizhi.bpf.cmfz.advice.LogAdvice"></bean>

    <!--false:使用jdk默认的代理模式，基于接口动态生成代理-->
    <!--true:使用cglib的方式生成代理，基于实现类动态代理-->

    <aop:config proxy-target-class="true">
        <aop:pointcut id="logPc" expression="@annotation(com.baizhi.bpf.cmfz.commmon.LogAnnotation)"></aop:pointcut>
        <aop:advisor advice-ref="logAdvice" pointcut-ref="logPc"/>
    </aop:config>



</beans>